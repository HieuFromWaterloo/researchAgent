---
name: Build and Push Flask Image to AWS ECR
on:
  workflow_dispatch:
    inputs:
      aws-region:
        description: "aws region"
        required: true
        default: "us-east-1"
jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.aws-region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          bash ./build/git_update.sh -v major

      - name: Add api secrets to .env
        id: add-api-keys-env
        run: |
          echo "OPENAI_KEY='${{ secrets.OPENAI_KEY }}'" >> ./app/.env
          echo "SERPER_KEY='${{ secrets.SERPER_KEY }}'" >> ./app/.env
          echo "BROWSERLESS_KEY='${{ secrets.BROWSERLESS_KEY }}'" >> ./app/.env

      - name: Build, Tag, and Push the Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: flaskapp-agent
          IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
        run: |
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./app/
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
